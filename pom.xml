<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.confidential</groupId>
    <artifactId>platform</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.0.RELEASE</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>
    <modules>
        <module>auth-service</module>
        <module>config</module>
        <module>config-server</module>
        <module>eureka</module>
        <module>hystrix</module>
        <module>location-service</module>
        <module>user-service</module>
    </modules>

    <properties>
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <jersey.version>1.19</jersey.version>
        <json-path.version>2.0.0</json-path.version>
        <lombok.version>1.16.6</lombok.version>
	<sonar.version>2.4</sonar.version>
	<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
    	<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    	<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    	<sonar.jacoco.reportPath>${project.build.directory}/jacoco.exec</sonar.jacoco.reportPath>
    	<sonar.jacoco.itReportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.itReportPath>
    	<sonar.junit.reportsPath>${project.build.directory}/jacoco.exec</sonar.junit.reportsPath>
	<jacoco.version>0.7.4.201502262128</jacoco.version>
	<jacoco.dataFile>${sonar.jacoco.reportPath}</jacoco.dataFile>
    	<jacoco.destFile>${sonar.jacoco.reportPath}</jacoco.destFile>
    	<jacoco.outputDirectory>${project.reporting.outputDirectory}/jacoco</jacoco.outputDirectory>
        <docker.image.prefix>confidential</docker.image.prefix>
    </properties>

    <dependencies>

        <!-- Spring Boot Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

        <!-- Spring Cloud Dependencies -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    
    </dependencies>

    <build>
        
        <plugins>
        
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        
        	<plugin>
            	<groupId>org.apache.maven.plugins</groupId>
            	<artifactId>maven-release-plugin</artifactId>
        	</plugin>
        
		    <!-- This JACOCO Configuration generates the test coverage results for Sonar -->
      		<plugin>
        		<groupId>org.jacoco</groupId>
        		<artifactId>jacoco-maven-plugin</artifactId>
        		
        		<executions>
          		
          			<!-- This section is for the junits -->
          			<execution>
		            	<id>default-prepare-agent</id>
        		    	<goals>
              				<goal>prepare-agent</goal>
            			</goals>
          			</execution>
          			<execution>
            			<id>default-report</id>
            			<goals>
              				<goal>report</goal>
            			</goals>
          			</execution>
          
          			<!-- This section is for the integration tests -->
          			<execution>
            			<id>default-prepare-agent-integration</id>
            			<goals>
              				<goal>prepare-agent-integration</goal>
            			</goals>
          			</execution>
          			<execution>
            			<id>default-report-integration</id>
            			<goals>
              				<goal>report-integration</goal>
            			</goals>
          			</execution>
        
        		</executions>
      		</plugin>

        </plugins>
        
        <pluginManagement>
        
            <plugins>
        
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.3.2</version>
                    <configuration>
                        <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                        <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources>
                    </configuration>
    	    	</plugin>
            	
            	<plugin>
                	<groupId>org.apache.maven.plugins</groupId>
	                <artifactId>maven-release-plugin</artifactId>
    	            <version>2.5.2</version>
        	        <configuration>
            	        <pushChanges>false</pushChanges>
                	    <localCheckout>true</localCheckout>
                	</configuration>
            	</plugin>
        	
 		        <plugin>
        			<groupId>org.codehaus.mojo</groupId>
          			<artifactId>sonar-maven-plugin</artifactId>
          			<version>${sonar.version}</version>
        		</plugin>
 
        	    <plugin>
          			<groupId>org.jacoco</groupId>
          			<artifactId>jacoco-maven-plugin</artifactId>
          			<version>${jacoco.version}</version>
          			<configuration>
            			<destFile>${jacoco.destFile}</destFile>
            			<dataFile>${jacoco.dataFile}</dataFile>
            			<outputDirectory>${jacoco.outputDirectory}</outputDirectory>
          			</configuration>
        		</plugin>
        	
        	</plugins>
        
        </pluginManagement>
    
    </build>
<!--
     <scm>
         <connection>scm:git:ssh://</connection>
         <developerConnection>scm:git:</developerConnection>
         <url></url>
         <tag></tag>
     </scm>

    <distributionManagement>
        
        <repository>
            <id></id>
            <name></name>
            <url></url>
        </repository>
        
        <snapshotRepository>
            <id></id>
            <name></name>
            <url></url>
        </snapshotRepository>
    
    </distributionManagement>
-->
    <dependencyManagement>
    
        <dependencies>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- Spring Cloud Dependencies -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-parent</artifactId>
                <version>Brixton.M3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    
    </dependencyManagement>

	<repositories>

		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

	</repositories>

</project>
